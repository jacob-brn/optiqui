{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "rays",
  "type": "registry:component",
  "title": "Rays",
  "description": "Light rays effect, perfect for drawing attention",
  "registryDependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "registry/ui/Rays.tsx",
      "content": "\"use client\";\r\nimport { motion } from \"motion/react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\ntype Ray = {\r\n  rotate: number;\r\n  opacity: number;\r\n  translateY: number;\r\n};\r\n\r\ntype CastDirectionType = \"from-right\" | \"from-left\" | \"from-center\";\r\n\r\ninterface RaysProps {\r\n  className?: string;\r\n  rayColor?: string;\r\n  rayWidth?: string;\r\n  blurAmount?: string;\r\n  castDirection?: CastDirectionType;\r\n  animationDuration?: number;\r\n  animationDelay?: number;\r\n  staggerDelay?: number;\r\n  rays?: Ray[];\r\n}\r\n\r\nconst POSITION_CLASSES: Record<CastDirectionType, string> = {\r\n  \"from-right\":\r\n    \"absolute -top-1/4 left-full w-[300%] h-[200%] sm:w-[150%] sm:left-0 md:left-full\",\r\n  \"from-center\":\r\n    \"absolute -top-[150%] left-1/2 -translate-x-1/2 w-[300%] h-[200%] sm:w-[200%]\",\r\n  \"from-left\":\r\n    \"absolute -top-1/4 right-full w-[300%] h-[200%] sm:w-[150%] sm:right-0 md:right-full pointer-events-none\",\r\n};\r\n\r\nconst TRANSFORM_ORIGINS: Record<CastDirectionType, string> = {\r\n  \"from-right\": \"top left\",\r\n  \"from-center\": \"top center\",\r\n  \"from-left\": \"top right\",\r\n};\r\n\r\nconst RAY_POSITIONS: Record<CastDirectionType, string> = {\r\n  \"from-right\": \"top-0 left-0\",\r\n  \"from-center\": \"top-0 left-0\",\r\n  \"from-left\": \"top-0 right-0\",\r\n};\r\n\r\nconst Rays = ({\r\n  className,\r\n  rayColor = \"white\",\r\n  rayWidth,\r\n  blurAmount = \"22px\",\r\n  castDirection = \"from-left\",\r\n  animationDuration = 5,\r\n  animationDelay = 0.2,\r\n  staggerDelay = 0.2,\r\n  rays = [\r\n    { rotate: 10, opacity: 60, translateY: 0 },\r\n    { rotate: 2, opacity: 51, translateY: 15 },\r\n    { rotate: -3, opacity: 60, translateY: 30 },\r\n    { rotate: -9, opacity: 30, translateY: 45 },\r\n    { rotate: -10, opacity: 56, translateY: 60 },\r\n    { rotate: 22, opacity: 55, translateY: 75 },\r\n    { rotate: 5, opacity: 55, translateY: 0 },\r\n  ],\r\n}: RaysProps) => {\r\n  const positionClasses = POSITION_CLASSES[castDirection];\r\n  const transformOrigin = TRANSFORM_ORIGINS[castDirection];\r\n  const rayPosition = RAY_POSITIONS[castDirection];\r\n\r\n  const baseRotation =\r\n    castDirection === \"from-left\"\r\n      ? -45\r\n      : castDirection === \"from-center\"\r\n      ? 0\r\n      : 45;\r\n\r\n  const containerVariants = {\r\n    hidden: {},\r\n    visible: {\r\n      transition: {\r\n        staggerChildren: staggerDelay,\r\n      },\r\n    },\r\n  };\r\n\r\n  const rayVariants = {\r\n    hidden: {\r\n      scaleY: 0,\r\n      height: 0,\r\n    },\r\n    visible: (index: number) => ({\r\n      scaleY: 1,\r\n      height: \"200%\",\r\n      transition: {\r\n        scaleY: {\r\n          duration: 1,\r\n          ease: \"easeOut\",\r\n        },\r\n        height: {\r\n          duration: 0,\r\n        },\r\n      },\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className={cn(positionClasses, \"pointer-events-none\", className)}\r\n      style={{\r\n        filter: `blur(${blurAmount})`,\r\n        transform: `rotate(${baseRotation}deg)`,\r\n      }}\r\n      variants={containerVariants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n    >\r\n      {rays.map((ray, index) => {\r\n        const opacityValue = ray.opacity / 100;\r\n        const individualDuration = animationDuration + index;\r\n\r\n        return (\r\n          <motion.div\r\n            key={index}\r\n            className={cn(\r\n              \"absolute w-[15px] sm:w-[20px] md:w-[30px]\",\r\n              rayPosition,\r\n              rayWidth\r\n            )}\r\n            style={{\r\n              background: `linear-gradient(to bottom, ${rayColor} 70%, transparent)`,\r\n              transformOrigin,\r\n              opacity: opacityValue,\r\n            }}\r\n            variants={rayVariants}\r\n            custom={index}\r\n            animate={{\r\n              translateY: [\r\n                ray.translateY,\r\n                ray.translateY + ray.rotate,\r\n                ray.translateY,\r\n              ],\r\n              rotate: [\r\n                ray.rotate,\r\n                ray.rotate + (index % 2 === 0 ? 2 : -2),\r\n                ray.rotate,\r\n              ],\r\n              filter: [\r\n                `blur(${blurAmount})`,\r\n                `blur(${Number.parseInt(blurAmount) - 8}px)`,\r\n                `blur(${blurAmount})`,\r\n              ],\r\n            }}\r\n            transition={{\r\n              translateY: {\r\n                delay: 1.5 + index * animationDelay,\r\n                duration: individualDuration,\r\n                repeat: Number.POSITIVE_INFINITY,\r\n                ease: \"easeInOut\",\r\n                repeatType: \"reverse\",\r\n              },\r\n              rotate: {\r\n                delay: 1.5 + index * animationDelay,\r\n                duration: individualDuration,\r\n                repeat: Number.POSITIVE_INFINITY,\r\n                ease: \"easeInOut\",\r\n                repeatType: \"reverse\",\r\n              },\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Rays;\r\n",
      "type": "registry:component"
    }
  ]
}
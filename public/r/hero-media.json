{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "hero-media",
  "type": "registry:component",
  "title": "Hero Media",
  "description": "Customizable component for Hero Section capabale of displaying images or videos in a modal.",
  "registryDependencies": [
    "motion",
    "dialog"
  ],
  "files": [
    {
      "path": "registry/ui/HeroMedia.tsx",
      "content": "\"use client\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Play, X } from \"lucide-react\";\r\nimport Image from \"next/image\";\r\nimport { motion, AnimatePresence } from \"motion/react\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogClose,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogDescription,\r\n  DialogHeader,\r\n  DialogOverlay,\r\n  DialogTrigger,\r\n} from \"@/components/ui/dialog\";\r\n\r\ntype HeroMediaProps =\r\n  | {\r\n      type: \"image\";\r\n      iframe?: never;\r\n      thumbnailUrl: string;\r\n      videoUrl?: never;\r\n      className?: string;\r\n      alt?: string;\r\n      buttonTitle?: never;\r\n      buttonDescription?: never;\r\n      PopoverTitle?: never;\r\n      PopoverDescription?: never;\r\n    }\r\n  | {\r\n      type: \"video\";\r\n      iframe?: boolean;\r\n      thumbnailUrl: string;\r\n      videoUrl: string;\r\n      className?: string;\r\n      alt?: string;\r\n      buttonTitle: string;\r\n      buttonDescription: string;\r\n      PopoverTitle?: string;\r\n      PopoverDescription?: string;\r\n    };\r\n\r\nconst VideoPopover = ({\r\n  children,\r\n  title,\r\n  description,\r\n  iframe = true,\r\n  videoUrl,\r\n}: {\r\n  children: React.ReactNode;\r\n  title: string;\r\n  description: string;\r\n  iframe?: boolean;\r\n  videoUrl: string;\r\n}): JSX.Element => {\r\n  return (\r\n    <Dialog>\r\n      <DialogOverlay className=\"bg-transparent backdrop-blur-md bg-gradient-to-br from-background/30 to-secondary/30\" />\r\n      <DialogTrigger asChild>{children}</DialogTrigger>\r\n      <DialogContent className=\"w-full max-w-4xl aspect-video grid gap-y-6 bg-transparent border-none [&_button]:hidden\">\r\n        {/* delete this: \"[&_button]:hidden\" to show exit buttons */}\r\n        <DialogClose className=\"w-min h-min bg-background/90 rounded-full p-1 border border-border\">\r\n          <X className=\"w-6 h-6\" />\r\n        </DialogClose>\r\n        <DialogHeader className=\"text-left\">\r\n          <DialogTitle className=\"text-2xl text-gray-50 font-semibold\">\r\n            {title}\r\n          </DialogTitle>\r\n          <DialogDescription className=\"text-base text-muted-foreground\">\r\n            {description}\r\n          </DialogDescription>\r\n        </DialogHeader>\r\n        {iframe ? (\r\n          <iframe\r\n            src={videoUrl}\r\n            allowFullScreen\r\n            loading=\"lazy\"\r\n            className=\"w-full aspect-video rounded-lg\"\r\n          />\r\n        ) : (\r\n          <video\r\n            src={videoUrl}\r\n            controls\r\n            autoPlay\r\n            className=\"w-full aspect-video rounded-lg\"\r\n          />\r\n        )}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst HeroMedia = ({\r\n  type,\r\n  iframe,\r\n  thumbnailUrl,\r\n  videoUrl,\r\n  className,\r\n  alt = \"Image showcasing product\",\r\n  buttonTitle,\r\n  buttonDescription,\r\n  PopoverTitle,\r\n  PopoverDescription,\r\n}: HeroMediaProps): JSX.Element => {\r\n  const [isHovered, setIsHovered] = useState<boolean>(false);\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      {type === \"image\" ? (\r\n        <Image\r\n          src={thumbnailUrl}\r\n          alt={alt}\r\n          className={cn(\"rounded-xl relative z-10\", className)}\r\n          width={9999}\r\n          height={9999}\r\n          quality={100}\r\n        />\r\n      ) : (\r\n        <div className=\"grid items-center justify-center\">\r\n          <Image\r\n            src={thumbnailUrl}\r\n            alt={alt}\r\n            className={cn(\"rounded-xl relative z-10\", className)}\r\n            width={9999}\r\n            height={9999}\r\n            quality={100}\r\n          />\r\n          <VideoPopover\r\n            title={PopoverTitle || \"\"}\r\n            description={PopoverDescription || \"\"}\r\n            videoUrl={videoUrl}\r\n            iframe={iframe}\r\n          >\r\n            <motion.div\r\n              className=\"absolute inset-0 z-10 flex items-center justify-center cursor-pointer\"\r\n              initial={false}\r\n            >\r\n              <div\r\n                className=\"bg-background/80 border border-border rounded-full flex items-center justify-center group cursor-pointer\"\r\n                onMouseEnter={() => setIsHovered(true)}\r\n                onMouseLeave={() => setIsHovered(false)}\r\n              >\r\n                <div className=\"flex items-center p-4\">\r\n                  <Play\r\n                    className=\"w-9 h-9 text-foreground\"\r\n                    fill=\"currentColor\"\r\n                    stroke=\"currentColor\"\r\n                  />\r\n                  <AnimatePresence mode=\"wait\">\r\n                    {isHovered && (\r\n                      <motion.div\r\n                        className=\"overflow-hidden\"\r\n                        initial={{ width: 0, opacity: 0 }}\r\n                        animate={{\r\n                          width: \"auto\",\r\n                          opacity: 1,\r\n                          transition: {\r\n                            width: {\r\n                              type: \"spring\",\r\n                              stiffness: 150,\r\n                              damping: 18,\r\n                            },\r\n                            opacity: { duration: 0.2 },\r\n                          },\r\n                        }}\r\n                        exit={{\r\n                          width: 0,\r\n                          opacity: 0,\r\n                          transition: {\r\n                            width: {\r\n                              type: \"spring\",\r\n                              stiffness: 150,\r\n                              damping: 18,\r\n                            },\r\n                            opacity: { duration: 0.2, delay: 0.1 },\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div className=\"grid grid-flow-row auto-rows-max ml-3 whitespace-nowrap pr-3 select-none text-left\">\r\n                          <span className=\"text-sm font-medium text-foreground\">\r\n                            {buttonTitle}\r\n                          </span>\r\n                          <span className=\"text-xs text-muted-foreground\">\r\n                            {buttonDescription}\r\n                          </span>\r\n                        </div>\r\n                      </motion.div>\r\n                    )}\r\n                  </AnimatePresence>\r\n                </div>\r\n              </div>\r\n            </motion.div>\r\n          </VideoPopover>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroMedia;\r\n",
      "type": "registry:component"
    }
  ]
}